{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/about/about.component.ts","./src/app/about/about.component.html","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/countries/countries.component.ts","./src/app/countries/countries.component.html","./src/app/home/home.component.ts","./src/app/home/home.component.html","./src/app/services/apicallservices/gov-india-city.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>about works!</p>\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { HomeComponent } from './home/home.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { AboutComponent } from './about/about.component';\nimport { AppComponent } from './app.component';\n\nconst routes: Routes = [\n  {path: \"home\", component: HomeComponent},\n  {path: \"countries\", component: CountriesComponent},\n  {path: \"about\", component: AboutComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, CUSTOM_ELEMENTS_SCHEMA } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'helloworld';\n\n}\n","\n<div id=\"menu\">\n  <button type=\"button\" class=\"btn btn-outline-primary menu-button\" routerLink=\"home\" routerLinkActive=\"active\">Home</button>\n  <button type=\"button\" class=\"btn btn-outline-primary menu-button\" routerLink=\"countries\" routerLinkActive=\"active\">Countries</button>\n  <button type=\"button\" class=\"btn btn-outline-primary menu-button\" routerLink=\"about\" routerLinkActive=\"active\">About</button>\n</div>\n<br>\n<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http'\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { CountriesComponent } from './countries/countries.component';\nimport { AboutComponent } from './about/about.component'; \n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    CountriesComponent,\n    AboutComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    HttpClientModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit} from '@angular/core';\nimport stateList from './json-files/state-list.json'; \nimport { GovIndiaCityService } from '../services/apicallservices/gov-india-city.service';\nimport { HttpClientModule } from '@angular/common/http';\n@Component({\n  selector: 'app-countries',\n  templateUrl: './countries.component.html',\n  styleUrls: ['./countries.component.css']\n})\nexport class CountriesComponent implements OnInit {\n\n  selectedState:string;\n  states:any = stateList.states;\n  districtList:any; \n  continentData:any;\n  constructor(private continentService: GovIndiaCityService) { \n    \n  }\n\n  ngOnInit(): void {\n  } \n  stateUpdate(stateName: HTMLInputElement){ \n    this.selectedState = (< HTMLInputElement > stateName).value;  \n    for(var i=0; i<this.states.length; i++)\n    {\n      if(this.states[i].state === this.selectedState)\n      {\n        this.districtList = this.states[i].districts;\n      }\n    }\n  }\n\n  getContinentData(continent:string){\n    this.continentService.getAllCitiesData(continent).subscribe(data=>{\n      this.continentData = data;\n    });\n  }\n}\n","\n<div id=\"left-sidebar-div\">\n    <form>\n    <div class=\"list-group\" >\n      <a [routerLink]=\"\" (click)=\"getContinentData('Africa')\" class=\"list-group-item list-group-item-action\" data-title=\"Continent\">\n        Africa\n      </a>\n      <a [routerLink]=\"\" (click)=\"getContinentData('Americas')\" class=\"list-group-item list-group-item-action\" data-title=\"Continent\"> Americas</a>\n      <a [routerLink]=\"\" (click)=\"getContinentData('Asia')\" class=\"list-group-item list-group-item-action\" data-title=\"Continent\">Asia</a>\n      <a [routerLink]=\"\" (click)=\"getContinentData('Europe')\" class=\"list-group-item list-group-item-action\" data-title=\"Continent\">Europe</a>\n      <a [routerLink]=\"\" (click)=\"getContinentData('Oceania')\" class=\"list-group-item list-group-item-action\" data-title=\"Continent\">Oceania</a>\n      <a href=\"#\" class=\"list-group-item list-group-item-action disabled\" tabindex=\"-1\" aria-disabled=\"true\"> ... </a>\n    </div>\n    <div>\n      <div class=\"list-group-item list-group-item-action div-input\" data-title=\"Sarch for Country\">\n        <input class=\"form-control\" name=\"country\" list=\"countries\" placeholder=\"Country\">\n        <datalist id = \"countries\">\n            <option value=\"India\"></option>\n        </datalist>\n      </div>\n      <div class=\"list-group-item list-group-item-action div-input\" data-title=\"Search for States\" >\n        <input class=\"form-control\" #stateVal name=\"state\" list=\"states\" placeholder=\"State\" (blur)=\"stateUpdate(stateVal)\">\n        <datalist id = \"states\">\n            <option *ngFor=\"let stateList of states\" value=\"{{stateList.state}}\">\n            </option>\n        </datalist>\n      </div>\n      <div class=\"list-group-item list-group-item-action div-input\" data-title=\"Search for Districts\">\n        <input class=\"form-control\" name=\"district\" list=\"districts\" placeholder=\"District\" >\n        <datalist id = \"districts\">\n            <option *ngFor=\"let district of districtList\" value=\"{{district}}\"></option>\n        </datalist>\n      </div>\n    </div>\n    </form>\n  </div>\n  \n  <div id=\"dataSection\">\n      <h1>Jay Ram G ki</h1>\n      <div id=\"div-continent-summary\">\n        <h5>Total countries: {{continentData.length}}</h5>\n      </div>\n      <div class=\"div-country-details\" *ngFor=\"let continent of continentData\">\n        <div class=\"media country\"> \n          <img src=\"{{continent.flag}}\" class=\"align-self-center mr-3\" alt=\"{{continent.flag}}\" data-title=\"Country: {{continent.name}} &#013;Capital: {{continent.capital}} &#013;Currency:{{continent.currencies[0].name}}\">\n          \n            <div class=\"media-body\" style=\"align-self: center;\">\n              <div>\n                  <h4 class=\"mt-0\" data-title=\"Country\">{{continent.name}}</h4>\n                  <h6 data-title=\"Capital is {{continent.capital}}\">[ {{continent.capital}} ]</h6>                \n              </div>\n          </div>\n          <div class=\"media-body\">\n                <div class=\"card\" style=\"width: 19rem;\">\n                  <div class=\"card-header info\">\n                    <span>Native Name: </span>\n                    <span style=\"color: gray;\">{{continent.nativeName}}</span>\n                  </div>\n                  <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\">\n                    <span>Currency: </span>\n                    <span style=\"color: gray;\">{{continent.currencies[0].name}}  |  {{continent.currencies[0].code}}  |  {{continent.currencies[0].symbol}}</span>\n                    </li>\n                  </ul>\n                </div>\n          </div>\n         \n          <div class=\"media-body\">\n                <div class=\"card\" style=\"width: 30rem;\">\n                  <div class=\"card-header info\">\n                    <span>Time Zone : </span>\n                    <span *ngFor=\"let zones of continent.timezones\" style=\"color: gray;\">{{zones}}</span>\n                  </div>\n                  <ul class=\"list-group list-group-flush\">\n                    <li class=\"list-group-item\">\n                      <table>\n                        <tr>\n                          <td><span>Borders : </span></td>\n                          <td *ngFor=\"let borders of continent.borders\" style=\"color: gray;\">{{borders}} &nbsp;</td>\n                        </tr>\n                      </table>\n                    </li>\n                 </ul>\n                </div>\n          </div>\n        </div>\n        <hr>\n      </div>\n  </div>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>home works!</p>\n","import { Injectable } from '@angular/core';\nimport { HttpClientModule, HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\nexport class GovIndiaCityService {\n\n  constructor(private httpAjaxApiCall: HttpClient) { }\n  getAllCitiesData(continent:string)\n  {\n    //return details of all the related countries within the continent\n    //API - https://restcountries.eu/rest/v2/region/{continent_name}\n    return this.httpAjaxApiCall.get(\"https://restcountries.eu/rest/v2/region/\"+continent);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}